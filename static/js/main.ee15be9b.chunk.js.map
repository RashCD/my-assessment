{"version":3,"sources":["api/index.tsx","components/PageButtonControl.tsx","components/Search.tsx","styles/Common.tsx","components/SearchResults.tsx","App.tsx","index.tsx"],"names":["api","search","param","page","concat","PageContainer","styled","_templateObject","PageButtonControl","_this$props","this","props","containerStyle","totalCount","onPageChange","currentIndex","react_default","a","createElement","style","Pagination","activePage","boundaryRange","size","siblingRange","totalPages","ellipsisItem","undefined","firstItem","lastItem","prevItem","nextItem","Component","SearchContainer","div","_ref","Object","objectSpread","height","margin","Search","label","onChange","onKeyDown","InputGroup","Input","placeholder","InputGroupAddon","addonType","Line","display","border","borderTop","padding","Row","SearchResults_templateObject","RepoTitle","_templateObject2","LangSection","_templateObject3","Language","_templateObject4","Date","_templateObject5","SearchResults","language","star","title","subtitle","date","react","SearchResults_Date","moment","format","BoxShadow","App_templateObject","Container","App_templateObject2","Title","App_templateObject3","TextBold","App_templateObject4","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delayCallback","fetchApi","_this$state","state","searchQuery","fetch","then","response","json","data","setState","incomplete_results","items","takeRight","total_count","handleEnterKey","event","key","charCode","setDelayState","value","handleChangeText","target","handlePageChange","throttle","_this$state2","Math","round","Search_Search","map","_ref2","id","full_name","stargazers_count","description","created_at","SearchResults_SearchResults","PageButtonControl_PageButtonControl","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ee15be9b.chunk.js","sourcesContent":["const BASE_URL = 'https://api.github.com/';\n\nexport default {\n  search: (param: string, page: number) =>\n    `${BASE_URL}search/repositories?per_page=${page}&q=${param}`,\n};\n","import React, { Component, Fragment } from 'react';\nimport { Button } from 'reactstrap';\nimport { Form, Grid, Pagination, Segment } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst PageContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n  height: 30px;\n`;\n\ninterface IProps {\n  containerStyle?: object;\n  totalCount?: number;\n  onClick?: () => void;\n  onPageChange?: any;\n  size?: string;\n  currentIndex: number;\n}\n\nexport default class PageButtonControl extends Component<IProps, {}> {\n  render() {\n    const {\n      containerStyle,\n      totalCount,\n      onPageChange,\n      currentIndex,\n    } = this.props;\n    const showEllipsis = true;\n    const showFirstAndLastNav = true;\n    const showPreviousAndNextNav = true;\n\n    return (\n      <PageContainer style={containerStyle}>\n        <Pagination\n          activePage={currentIndex}\n          boundaryRange={1}\n          onPageChange={onPageChange}\n          size=\"mini\"\n          siblingRange={3}\n          totalPages={totalCount || 0}\n          // Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\n          ellipsisItem={showEllipsis ? undefined : null}\n          firstItem={showFirstAndLastNav ? undefined : null}\n          lastItem={showFirstAndLastNav ? undefined : null}\n          prevItem={showPreviousAndNextNav ? undefined : null}\n          nextItem={showPreviousAndNextNav ? undefined : null}\n        />\n      </PageContainer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from 'reactstrap';\nimport styled from 'styled-components';\n\ninterface IProps {\n  label?: string;\n  style?: object;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst SearchContainer = styled.div(({ style }) => ({\n  height: 'auto',\n  margin: '10px 0 10px 0',\n  ...style,\n}));\n\nexport default class Search extends Component<IProps, {}> {\n  public render() {\n    const { style, label, onChange, onKeyDown } = this.props;\n    return (\n      <SearchContainer style={style}>\n        <InputGroup>\n          <Input\n            placeholder={label}\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n          />\n          <InputGroupAddon addonType=\"append\">&#8981;</InputGroupAddon>\n        </InputGroup>\n      </SearchContainer>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Line = styled.div(({ style }) => ({\n  display: 'block',\n  height: '3px',\n  border: '0',\n  borderTop: '1px solid #ccc',\n  margin: '1em 0',\n  padding: '0',\n  ...style,\n}));\n","import moment from 'moment';\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Line } from '../styles/Common';\n\nconst Row = styled('div')`\n  display: flex;\n  flex: 'row';\n  margin-bottom: 10px;\n`;\n\nconst RepoTitle = styled('div')`\n  flex: 3;\n  font-size: 1.5rem;\n  color: blue;\n`;\n\nconst LangSection = styled('div')`\n  display: flex;\n  flex: 'row';\n  flex: 1;\n  justify-content: space-around;\n  align-items: center;\n\n  & > p {\n    flex: 1;\n    text-align: center;\n  }\n`;\n\nconst Language = styled('p')`\n  text-align: start !important;\n`;\n\nconst Date = styled('p')`\n  font-size: 14px;\n  color: #60656b;\n`;\n\ninterface IProps {\n  star?: number;\n  language?: string;\n  title?: string;\n  subtitle?: string;\n  date?: string;\n}\n\nexport default class SearchResults extends Component<IProps, {}> {\n  public render() {\n    const { language, star, title, subtitle, date } = this.props;\n    return (\n      <Fragment>\n        <Line />\n        <Row>\n          <RepoTitle> {title} </RepoTitle>\n          <LangSection>\n            <Language> {language} </Language>\n            <p> {star} </p>\n          </LangSection>\n        </Row>\n        <p> {subtitle} </p>\n        <Date> Updated on {moment(date).format('ddd MMM DD YYYY')} </Date>\n      </Fragment>\n    );\n  }\n}\n","import { takeRight, throttle } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport api from './api';\nimport './App.css';\nimport PageButtonControl from './components/PageButtonControl';\nimport Search from './components/Search';\nimport SearchResults from './components/SearchResults';\n\nconst BoxShadow = styled('div')`\n  box-shadow: 1px 2px 10px grey;\n`;\n\nconst Container = styled(BoxShadow)`\n  margin: 5% 0 5% 0;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 7px;\n  display: inline-block;\n  width: 100%;\n  overflow: auto;\n  padding: 3%;\n`;\n\nconst Title = styled('div')`\n  margin-top: 3rem;\n  font-size: 3rem;\n  font-weight: 600;\n`;\n\nconst TextBold = styled('p')`\n  font-size: 1rem;\n  font-weight: 600;\n  margin: 1.5rem 0 1rem 0;\n`;\n\ninterface IState {\n  incomplete_results: boolean;\n  items: IResultItems[];\n  total_count: number;\n  currentIndex: number;\n  searchQuery: string;\n}\n\ninterface IResultItems {\n  id: number;\n  stargazers_count: number;\n  description: string;\n  language: string;\n  full_name: string;\n  created_at: string;\n}\n\nclass App extends Component<{}, IState> {\n  delayCallback: any;\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      incomplete_results: false,\n      items: [],\n      total_count: 0,\n      currentIndex: 1,\n      searchQuery: '' || 'react',\n    };\n\n    this.delayCallback = throttle(this.setDelayState, 1000);\n  }\n\n  public componentDidMount() {\n    this.fetchApi();\n  }\n\n  fetchApi = () => {\n    const { currentIndex, searchQuery } = this.state;\n    fetch(api.search(searchQuery, currentIndex * 10))\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          incomplete_results: data.incomplete_results,\n          items: takeRight(data.items, 10),\n          total_count: data.total_count,\n        });\n      });\n  };\n\n  handleEnterKey = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' || event.charCode === 13) {\n      this.fetchApi();\n    }\n  };\n\n  setDelayState = (value: string) => {\n    return this.setState({ searchQuery: value });\n  };\n\n  handleChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.delayCallback(value);\n  };\n\n  handlePageChange = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    { activePage }: any,\n  ) => {\n    this.setState({ currentIndex: activePage }, this.fetchApi);\n  };\n\n  public render() {\n    const { items, total_count, currentIndex } = this.state;\n    let totalCount;\n    if (total_count && total_count < 1000) {\n      totalCount = Math.round(total_count / 10);\n    } else if (total_count && total_count > 1000) {\n      totalCount = Math.round(1000 / 10);\n    } else {\n      totalCount = total_count > 0 ? Math.round(total_count / 10) : 0;\n    }\n    return (\n      <Fragment>\n        <Title> Github Search </Title>\n        <Container>\n          <Search\n            label=\"Keyword\"\n            onChange={this.handleChangeText}\n            onKeyDown={this.handleEnterKey}\n          />\n          <TextBold>1000 repository results</TextBold>\n          {items.map(\n            ({\n              id,\n              full_name,\n              stargazers_count,\n              language,\n              description,\n              created_at,\n            }) => {\n              return (\n                <SearchResults\n                  key={id}\n                  star={stargazers_count}\n                  language={language}\n                  title={full_name}\n                  subtitle={description}\n                  date={created_at}\n                />\n              );\n            },\n          )}\n          <PageButtonControl\n            totalCount={totalCount}\n            onPageChange={this.handlePageChange}\n            currentIndex={currentIndex}\n          />\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\nimport './index.css';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin-left: 5% !important;\n        margin-right: 5% !important;\n    }\n`;\n\nReactDOM.render(\n  <Fragment>\n    <App />\n    <GlobalStyle />\n  </Fragment>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}